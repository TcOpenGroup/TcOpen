<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TcOpen.Inxton.Security</name>
    </assembly>
    <members>
        <member name="T:TcOpen.Inxton.Security.DefaultUserDataRepository`1">
            <summary>
            Default class for handling user data. It saves each user in a separate json file.
            Default folder is 'C:\INXTON\USERS'.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:TcOpen.Inxton.Security.DefaultUserDataRepository`1.#ctor(System.String)">
            <summary>
            Creates new instance of of <see cref="T:TcOpen.Inxton.Security.DefaultUserDataRepository`1"/>
            </summary>
            <param name="usersFolder">Users folder</param>
        </member>
        <member name="P:TcOpen.Inxton.Security.DefaultUserDataRepository`1.Location">
            <summary>
            User files location.
            </summary>
        </member>
        <member name="M:TcOpen.Inxton.Security.DefaultUserDataRepository`1.Create(System.String,`0)">
            <summary>
            Creates new user file.
            </summary>
            <param name="identifier">Users' identifier.</param>
            <param name="data">User data.</param>
        </member>
        <member name="M:TcOpen.Inxton.Security.DefaultUserDataRepository`1.Read(System.String)">
            <summary>
            Reads users' data from file.
            </summary>
            <param name="identifier">Users' identifier</param>
            <returns></returns>
        </member>
        <member name="M:TcOpen.Inxton.Security.DefaultUserDataRepository`1.Update(System.String,`0)">
            <summary>
            Updates users' data.
            </summary>
            <param name="identifier">Users' identifier.</param>
            <param name="data">Users' data.</param>
        </member>
        <member name="M:TcOpen.Inxton.Security.DefaultUserDataRepository`1.Delete(System.String)">
            <summary>
            Deletes users' data file.
            </summary>
            <param name="identifier">Users identifier</param>
        </member>
        <member name="P:TcOpen.Inxton.Security.DefaultUserDataRepository`1.Count">
            <summary>
            Gets total count of users.
            </summary>
        </member>
        <member name="M:TcOpen.Inxton.Security.DefaultUserDataRepository`1.GetRecords(System.String,System.Int32,System.Int32)">
            <summary>
            Gets users filtered by partial identifier. If empty will return all records from given range.
            </summary>
            <param name="identifier">Identifier to search.</param>
            <param name="skip">Skip records.</param>
            <param name="limit">Limit number of records.</param>
            <returns></returns>        
        </member>
        <member name="M:TcOpen.Inxton.Security.DefaultUserDataRepository`1.FilteredCount(System.String)">
            <summary>
            Counts users according to filter string.
            </summary>
            <param name="id">Filter string</param>
            <returns></returns>
        </member>
        <member name="M:TcOpen.Inxton.Security.DefaultUserDataRepository`1.RecordExists(System.String)">
            <summary>
            Retruns true if given user exists.
            </summary>
            <param name="identifier">Users' identifier</param>
            <returns></returns>
        </member>
        <member name="P:TcOpen.Inxton.Security.DefaultUserDataRepository`1.Queryable">
            <summary>
            Retrurn <see cref="T:System.Linq.IQueryable`1"/> of this repository.
            </summary>
        </member>
        <member name="T:TcOpen.Inxton.Security.Properties.strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:TcOpen.Inxton.Security.Properties.strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:TcOpen.Inxton.Security.Properties.strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:TcOpen.Inxton.Security.Properties.strings.AccessDeniedCredentials">
            <summary>
              Looks up a localized string similar to Access denied. Please provide some valid credentials..
            </summary>
        </member>
        <member name="P:TcOpen.Inxton.Security.Properties.strings.AccessDeniedEmptyToken">
            <summary>
              Looks up a localized string similar to Access denied. Invalid authorization token. Token is empty..
            </summary>
        </member>
        <member name="P:TcOpen.Inxton.Security.Properties.strings.AccessDeniedInvalidToken">
            <summary>
              Looks up a localized string similar to Access denied. Invalid authorization token..
            </summary>
        </member>
        <member name="P:TcOpen.Inxton.Security.Properties.strings.AccessDeniedPermissions">
            <summary>
              Looks up a localized string similar to Access denied. Your access permissions are invalid..
            </summary>
        </member>
        <member name="P:TcOpen.Inxton.Security.Properties.strings.CustomPrincipalError">
            <summary>
              Looks up a localized string similar to The application&apos;s default thread principal must be set to a CustomPrincipal object on startup..
            </summary>
        </member>
        <member name="P:TcOpen.Inxton.Security.Properties.strings.PasswordMismatch">
            <summary>
              Looks up a localized string similar to Passwords do not match..
            </summary>
        </member>
        <member name="P:TcOpen.Inxton.Security.Properties.strings.TokenAssigned">
            <summary>
              Looks up a localized string similar to Token is already assigned to different user. The authorization token was not changed..
            </summary>
        </member>
        <member name="T:TcOpen.Inxton.Security.SecurityManager">
            <summary>Provides management of user access.</summary>       
        </member>
        <member name="M:TcOpen.Inxton.Security.SecurityManager.Create(Vortex.Framework.Abstractions.Data.IRepository{Vortex.Framework.Abstractions.Security.UserData})">
            <summary>
            Creates authentication service with given user data repository.
            </summary>
            <param name="repository">User data reposotory <see cref="T:Vortex.Framework.Abstractions.Data.IRepository`1"/></param>
            <returns>Autentication service for this application <see cref="T:Vortex.Framework.Abstractions.Security.IAuthenticationService"/>Authentication service for this application.</returns>
        </member>
        <member name="M:TcOpen.Inxton.Security.SecurityManager.CreateDefault(System.String)">
            <summary>
            Creates authentication service with default user data repository <see cref="T:TcOpen.Inxton.Security.DefaultUserDataRepository`1"/>
            </summary>
            <param name="usersFolder">User file storage folder.</param>
            <returns>Autentication service for this application <see cref="T:Vortex.Framework.Abstractions.Security.IAuthenticationService"/>Authentication service for this application.</returns>
        </member>
        <member name="M:TcOpen.Inxton.Security.SecurityManager.CreateDefault">
             <summary>
             *Creates authentication* service with default user data repository <see cref="T:TcOpen.Inxton.Security.DefaultUserDataRepository`1"/>        
             </summary>        
            <remarks>   
             > [!TIP]
             > You can create your own user repository using <see cref="T:Vortex.Framework.Abstractions.Data.IRepository`1"/>        
             > [!IMPORTANT]
             > Default repository is designed for handling limited number of users and it should not be used in shared scenarions.
             > If you would like to use shared user repository consider implmentation of an appropriate <see cref="T:Vortex.Framework.Abstractions.Data.IRepository`1"/> implenentation.
            </remarks>
             <returns>Autentication service for this application <see cref="T:Vortex.Framework.Abstractions.Security.IAuthenticationService"/>Authentication service for this application.</returns>
        </member>
        <member name="M:TcOpen.Inxton.Security.SecurityManagerNotInitializedException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:TcOpen.Inxton.Security.SecurityManagerNotInitializedException" /> class.</summary>
        </member>
        <member name="M:TcOpen.Inxton.Security.SecurityManagerNotInitializedException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:TcOpen.Inxton.Security.SecurityManagerNotInitializedException" /> class with a specified error message.</summary>
            <param name="message">The message that describes the error. </param>
        </member>
        <member name="M:TcOpen.Inxton.Security.SecurityManagerNotInitializedException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:TcOpen.Inxton.Security.SecurityManagerNotInitializedException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The error message that explains the reason for the exception. </param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified. </param>
        </member>
        <member name="M:TcOpen.Inxton.Security.SecurityManagerNotInitializedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:TcOpen.Inxton.Security.SecurityManagerNotInitializedException" /> class with serialized data.</summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is <see langword="null" />. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
    </members>
</doc>
