@page "/Identity/Account/Login"
@inject NavigationManager _navigationManager
@inject BlazorAlertManager _alertManager

<div class="card">
    <h4 class="card-header">Log in</h4>
    <div class="card-body">
        <EditForm Model="@_model" OnValidSubmit="OnValidSubmit" Context="accountManagementContext">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Username</label>
                <InputText @bind-Value="_model.Username" class="form-control" />
                <ValidationMessage For="@(() => _model.Username)" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText @bind-Value="_model.Password" type="password" class="form-control" />
                <ValidationMessage For="@(() => _model.Password)" />
            </div>
            <button type="submit" class="btn btn-primary m-2">Login</button>
        </EditForm>
    </div>
</div>

@code{
    private LoginUserModel _model { get; set; }

    private void OnValidSubmit()
    {
        try
        {
            SecurityManager.Manager.Service.AuthenticateUser(_model.Username, _model.Password);
            TcoAppDomain.Current.Logger.Information($"User '{_model.Username}' logged in. {{@sender}}", new { UserName = _model.Username });
            _navigationManager.NavigateTo("", forceLoad: true);
            //_alertManager.addAlert("success", "User logged in.");
        }
        catch (UnauthorizedAccessException ex)
        {
            _alertManager.addAlert("warning", "Incorrect credentials!");
        }
        catch (Exception ex)
        {
            _alertManager.addAlert("warning", "User was not logged in.");
        }
    }

    protected override void OnInitialized()
    {
        _model = new LoginUserModel();
    }
}