<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="RecordableStation001_Sequencer" Id="{0f54228c-e27e-0cda-265f-a73be67e3923}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK RecordableStation001_Sequencer EXTENDS TcoCore.TcoSequencer
VAR_IN_OUT
    components : RecordableStation001_Components;
END_VAR
VAR
    _switchToStep : BOOL;
    _failedToLoad : BOOL;
END_VAR
VAR
    _onStateChangeCount : LREAL;
    _sequenceCompleteCount : LREAL;
    _stepsPerSequence : LREAL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{58b006a2-7734-0b60-3a71-4172637cc4a8}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
    bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
    bInCopyCode : BOOL; // if TRUE, the instance afterwards gets moved into the copy code (online change)
    ParentObject : ITcoObject;
    AutoRestoreMode : eRestoreMode;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Init" Id="{44e34f10-bf78-0b46-0d65-852122f94fbb}">
      <Declaration><![CDATA[METHOD Init
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[components();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Main" Id="{03744103-56f8-0326-0a36-da7d713dfbce}">
      <Declaration><![CDATA[(*~
    <docu>
        <summary>
            Main method of the sequener. Custom code needs to be placed here. The sequencer is executed by call of InstanceName.Run() method.
            This method is abstract, and it must be overridden in derived block.
        </summary>
    </docu>
~*)
METHOD PROTECTED Main : BOOL]]></Declaration>
      <Implementation>
        <ST><![CDATA[Init();

IF Step(10, TRUE, 'EXAMPLES_PRG._recordableStations._components._horizontal._moveHomeTask') THEN
    //-------------------------------------------------------
    IF (EXAMPLES_PRG._recordableStations._components._horizontal._moveHomeTask.Invoke().Done) THEN
        StepCompleteWhen(TRUE);
    END_IF;
    //-------------------------------------------------------
END_IF;

IF Step(20, TRUE, 'EXAMPLES_PRG._recordableStations._components._vertical._moveHomeTask') THEN
    //-------------------------------------------------------
    IF (EXAMPLES_PRG._recordableStations._components._vertical._moveHomeTask.Invoke().Done) THEN
        StepCompleteWhen(TRUE);
    END_IF;
    //-------------------------------------------------------
END_IF;

IF Step(30, TRUE, 'EXAMPLES_PRG._recordableStations._components._gripper._moveHomeTask') THEN
    //-------------------------------------------------------
    IF (EXAMPLES_PRG._recordableStations._components._gripper._moveHomeTask.Invoke().Done) THEN
        StepCompleteWhen(TRUE);
    END_IF;
    //-------------------------------------------------------
END_IF;]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnStateChange" Id="{72806dd4-b401-0cfd-1cec-47e0ac9cda2b}">
      <Declaration><![CDATA[METHOD PROTECTED OnStateChange
VAR_INPUT
    PreviousState : INT;
    NewState : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_onStateChangeCount := _onStateChangeCount + 1;
components._simTimer(IN := FALSE);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>