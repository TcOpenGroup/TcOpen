<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="CheckPointer" Id="{4c4616c5-1e65-0c1f-37fa-8b5ec900119b}" SpecialFunc="CheckPointer">
    <Declaration><![CDATA[// Implicitly generated code : DO NOT EDIT
FUNCTION CheckPointer : POINTER TO BYTE
VAR_INPUT
    ptToTest : POINTER TO BYTE; // Destination address of the pointer
    iSize : DINT; // Size of the type the pointer points to. (e.g: 20 for POINTER TO ARRAY [0..9] OF INT)
    iGran : DINT; // Granularity of the pointer access. This is the size of the biggest non-structured data type in the type the pointer points to. (e.g: 2 for POINTER TO ARRAY [0..9] OF INT)
    bWrite : BOOL; // Indicates read or write Access. TRUE = write access.
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Implicitly generated code : Only an Implementation suggestion
{noflow}
IF ptToTest = 0 THEN
    ADSLOGSTR(ADSLOG_MSGTYPE_ERROR OR ADSLOG_MSGTYPE_STRING, 'CheckPointer failed due to invalid address.', '');
ELSIF iSize <= 0 THEN
    ADSLOGSTR(ADSLOG_MSGTYPE_ERROR OR ADSLOG_MSGTYPE_STRING, 'CheckPointer failed due to invalid size.', '');
ELSIF iGran <= 0 THEN
    ADSLOGSTR(ADSLOG_MSGTYPE_ERROR OR ADSLOG_MSGTYPE_STRING, 'CheckPointer failed due to invalid granularity.', '');
    // -> Please note that the following memory area check is time consuming:
    //ELSIF F_CheckMemoryArea(pData:=ptToTest,nSize:=DINT_TO_UDINT(iSize)) = E_TcMemoryArea.Unknown THEN
//    ADSLOGSTR(ADSLOG_MSGTYPE_ERROR OR ADSLOG_MSGTYPE_STRING,'CheckPointer failed due to unknown memory area.','');
END_IF

CheckPointer := ptToTest;
{flow}]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>