<UserControl
    x:Class="TcoCore.TcoDiagnosticsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:loc="clr-namespace:TcOpen.Inxton.TcoCore.Wpf.Properties"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:vortex="http://vortex.mts/xaml"
    xmlns:vtr="clr-namespace:TcoCore"
    mc:Ignorable="d"
    d:DesignHeight="600"
    d:DesignWidth="800"
    IsVisibleChanged="UserControl_IsVisibleChanged">
    <UserControl.Resources>
        <materialDesign:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>
    <d:UserControl.DataContext>
        <vtr:TcoDiagnosticsViewModel />
    </d:UserControl.DataContext>
    <Grid x:Name="Element">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="150" MaxHeight="300" />
            <RowDefinition Height="10" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="20" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ComboBox
                Grid.Column="0"
                Margin="0,0,0,10"
                ItemsSource="{Binding Categories}"
                SelectedItem="{Binding MinMessageCategoryFilter}"
                Tag="{x:Static loc:Localization.MinCategoryFilter}" />
            <CheckBox
                Grid.Column="1"
                Content="Auto-update"
                IsChecked="{Binding AutoUpdate}"
                Style="{StaticResource MaterialDesignAccentCheckBox}"
                ToolTip="Toggles messages auto-update" />
            <Button
                Grid.Column="2"
                Margin="6"
                Command="{Binding UpdateMessagesCommand}"
                Content="{x:Static loc:Localization.UpdateMessages}"
                materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding DiagnosticsRunning}"
                materialDesign:ButtonProgressAssist.Value="-1"
                Style="{StaticResource MaterialDesignRaisedButton}" />
            <Button
                Grid.Column="3"
                Margin="6"
                Command="{Binding RogerAllMessagesCommand}"
                Content="{x:Static loc:Localization.RogerAll}"
                materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding DiagnosticsRunning}"
                materialDesign:ButtonProgressAssist.Value="-1"
                Style="{StaticResource MaterialDesignRaisedButton}" />
        </Grid>
        <DataGrid
            x:Name="dataGrid"
            Grid.Row="1"
            AutoGenerateColumns="False"
            IsReadOnly="True"
            ItemsSource="{Binding MessageDisplay}"
            SelectedItem="{Binding SelectedMessage}">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="{Binding CategoryAsEnum, Converter={vtr:MessageCategoryToBackgroundBrushConverter}}" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="BorderBrush" Value="LightGray" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.CellStyle>
                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{Binding CategoryAsEnum, Converter={vtr:MessageCategoryToBackgroundBrushConverter}}" />
                            <Setter Property="BorderThickness" Value="0" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="{x:Static loc:Localization.Message}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                FontWeight="ExtraBold"
                                Foreground="{Binding CategoryAsEnum, Converter={vtr:MessageCategoryToForegroundBrushConverter}}"
                                Text="{Binding Text}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{x:Static loc:Localization.Location}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Foreground="{Binding CategoryAsEnum, Converter={vtr:MessageCategoryToForegroundBrushConverter}}" Text="{Binding Location}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{x:Static loc:Localization.PerCycleCount}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Foreground="{Binding CategoryAsEnum, Converter={vtr:MessageCategoryToForegroundBrushConverter}}" Text="{Binding PerCycleCount}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{x:Static loc:Localization.Category}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Foreground="{Binding CategoryAsEnum, Converter={vtr:MessageCategoryToForegroundBrushConverter}}" Text="{Binding CategoryAsEnum}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{x:Static loc:Localization.Acknowledgement}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Visibility="{Binding Pinned,  Converter={StaticResource BooleanToVisibilityConverter}}" Content="{x:Static loc:Localization.Roger}" Command="{Binding Path=DataContext.RogerSelectedMessageCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type vtr:TcoDiagnosticsView}}}" Style="{DynamicResource MaterialDesignRaisedAccentButton}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{x:Static loc:Localization.TimeStamp}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Foreground="{Binding CategoryAsEnum, Converter={vtr:MessageCategoryToForegroundBrushConverter}}" Text="{Binding TimeStamp}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{x:Static loc:Localization.DiscardingMessages}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding PerCycleCount, Converter={vtr:PerCycleCountToWarningConverter}}" Foreground="{Binding CategoryAsEnum, Converter={vtr:MessageCategoryToForegroundBrushConverter}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <GridSplitter
            Grid.Row="2"
            HorizontalAlignment="Stretch"
            Background="{DynamicResource Secondary}" />
        <StackPanel Grid.Row="3" DataContext="{Binding SelectedMessage}">
            <GroupBox Header="{x:Static loc:Localization.Location}">
                <TextBlock
                    Margin="5"
                    HorizontalAlignment="Left"
                    FontSize="15"
                    Padding="5"
                    FontWeight="Medium"
                    Background="{Binding CategoryAsEnum, Converter={vtr:MessageCategoryToBackgroundBrushConverter}}"
                    Foreground="{Binding CategoryAsEnum, Converter={vtr:MessageCategoryToForegroundBrushConverter}}"
                    Text="{Binding Location}"
                    TextWrapping="WrapWithOverflow"/>
            </GroupBox>
            <GroupBox Header="{x:Static loc:Localization.Message}">
                <TextBlock
                    Margin="5"
                    HorizontalAlignment="Left"
                    Padding="5"
                    FontSize="18"
                    FontWeight="Medium"
                    Background="{Binding CategoryAsEnum, Converter={vtr:MessageCategoryToBackgroundBrushConverter}}"
                    Foreground="{Binding CategoryAsEnum, Converter={vtr:MessageCategoryToForegroundBrushConverter}}"
                    Text="{Binding Text}"
                    TextWrapping="WrapWithOverflow" />
            </GroupBox>
        </StackPanel>
        <Expander
            Grid.Row="4"
            DataContext="{Binding SelectedItem, ElementName=dataGrid}"
            Header="Details">
            <StackPanel HorizontalAlignment="Stretch">
                <GroupBox Header="{x:Static loc:Localization.Message}">
                    <TextBlock
                        HorizontalAlignment="Left"
                        FontWeight="Medium"
                        Foreground="{DynamicResource Secondary}"
                        Text="{Binding Text}"
                        TextWrapping="WrapWithOverflow" />
                </GroupBox>
                <GroupBox Header="{x:Static loc:Localization.Category}">
                    <TextBlock
                        HorizontalAlignment="Left"
                        FontWeight="Medium"
                        Foreground="{DynamicResource Secondary}"
                        Text="{Binding CategoryAsEnum}"
                        TextWrapping="WrapWithOverflow" />
                </GroupBox>
                <GroupBox Header="{x:Static loc:Localization.SubCategory}">
                    <TextBlock
                        HorizontalAlignment="Left"
                        FontWeight="Medium"
                        Foreground="{DynamicResource Secondary}"
                        Text="{Binding SubCategory}"
                        TextWrapping="WrapWithOverflow" />
                </GroupBox>
                <GroupBox Header="{x:Static loc:Localization.Source}">
                    <TextBlock
                        HorizontalAlignment="Left"
                        FontWeight="Medium"
                        Foreground="{DynamicResource Secondary}"
                        Text="{Binding Source}"
                        TextWrapping="WrapWithOverflow" />
                </GroupBox>
            </StackPanel>
        </Expander>

        <ScrollViewer VerticalScrollBarVisibility="Visible" Grid.Row="5" Height="150" Margin="5">
            <ContentControl Content="{Binding AffectedObjectPresentation}" />
        </ScrollViewer>

        <Expander Header="Details"
                  Grid.Row="4" 
                  DataContext="{Binding SelectedItem, ElementName=dataGrid}">
            <StackPanel HorizontalAlignment="Stretch">
                <GroupBox Header="{x:Static loc:Localization.Category}">
                    <TextBlock
                            HorizontalAlignment="Left"
                            FontWeight="Medium"
                         Background="{DynamicResource OnSecondary}"
                            Foreground="{DynamicResource Secondary}"
                            Text="{Binding CategoryAsEnum}"
                            TextWrapping="WrapWithOverflow" />
                </GroupBox>
                <GroupBox Header="{x:Static loc:Localization.SubCategory}">
                    <TextBlock
                            HorizontalAlignment="Left"
                            FontWeight="Medium"
                         Background="{DynamicResource OnSecondary}"
                            Foreground="{DynamicResource Secondary}"
                            Text="{Binding SubCategory}"
                            TextWrapping="WrapWithOverflow" />
                </GroupBox>
                <GroupBox Header="{x:Static loc:Localization.Source}">
                    <TextBlock
                            HorizontalAlignment="Left"
                            FontWeight="Medium"
                            Background="{DynamicResource OnSecondary}"
                            Foreground="{DynamicResource Secondary}"
                            Text="{Binding Source}"
                            TextWrapping="WrapWithOverflow" />
                </GroupBox>
            </StackPanel>
        </Expander>
        <TextBlock
            Grid.Row="6"
            HorizontalAlignment="Stretch"
            Background="{DynamicResource Primary}"
            Foreground="{DynamicResource OnPrimary}"
            Padding="5"
            Text="{x:Static loc:Localization.DiagnosticsRunnig}"
            Visibility="{Binding DiagnosticsRunning, Converter={vtr:BoolToVisibilityConverter}}" />

        <GroupBox Header="{x:Static loc:Localization.DiagnosticsDepth}" Grid.Row="7">
            <StackPanel>
                <TextBlock Text="{Binding DiagnosticsDepth}" HorizontalAlignment="Center" Margin="3.5"></TextBlock>
                <Slider Value="{Binding DiagnosticsDepth}" Margin="10" Minimum="1" Maximum="30"/>
            </StackPanel>
        </GroupBox>

        <vortex:HelpProviderView Grid.Row="8">
            <vortex:HelpProviderView.DataContext>
                <vortex:HelpProviderViewModel ComponentName="TcoDiagnosticsView" />
            </vortex:HelpProviderView.DataContext>
        </vortex:HelpProviderView>
    </Grid>
</UserControl>