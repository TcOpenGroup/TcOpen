@using MongoDB.Bson
@using TcOpen.Inxton.TcoCore.Blazor.TcoDiagnosticsAlternative.Helper
@using TcOpen.Inxton.TcoCore.Blazor.TcoDiagnosticsAlternative.Mapping
@using global::TcoCore
@using BlazorStrap





  <BSRow class="d-flex m-3" Justify="Justify.Center" Align="Align.Center">
      <BSCol Column="1">Open Message: @TotalCount </BSCol>
          <BSCol Column="3">
            <BSInput InputType="InputType.Select" @bind-Value="@DropDownSelectedCategory">
                @foreach (var category in Enum.GetValues(typeof(eMessageCategory)))
                {
                    <option value="@category">@category</option>
                }
            </BSInput>
        </BSCol>
        <BSCol Column="1">
            <BSButton class="btn btn-primary" @onclick="AcknowledgeMessages">Acknowledge All Messages</BSButton>
        </BSCol>
        <BSCol Column="3">
            <BSLabel>Depth Value: @DepthValue</BSLabel>
            <BSInput InputType="InputType.Range" @bind-Value="DepthValue" min="1" max="@MaxDiagnosticsDepth" />
        </BSCol>
    </BSRow>
<BSTable IsBordered="true">
    <thead>
        <tr>
            <th>Timestamp</th>
            <th>Acknowledged Timestamp</th>
            <th>Icon</th>
            <th>Severity Level</th>
            <th>Message Content</th>
            <th>Message Source</th>
            <th>Cycle </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (_messagesToDisplay != null)
        {
            foreach (var message in _messagesToDisplay)
            {
                var bgColorClass = MessageCategoryMapper.GetBackgroundColorForCategory(message.Level);
                var icon = MessageCategoryMapper.GetIconForLevel(message.Level);
             <tr>
             <td>@message.UtcTimeStamp</td>
             <td>@(message.TimeStampAcknowledged.HasValue ? message.TimeStampAcknowledged.Value.ToString("MM/dd/yyyy HH:mm:ss") : " ")</td>
             <td class="icon-container @bgColorClass">@((MarkupString)icon)</td>
             <td >@message.Level</td>
             <td>@ExtractMessageFromTemplateText.ExtractMessageWithoutBraces(message.MessageTemplate?.Text)</td>
             <td>@message.Properties?.sender?.Payload?.ParentSymbol</td>
             <td>@message.Properties?.sender?.Payload?.Cycle</td>
             <td>
                <button class="@(message.TimeStampAcknowledged.HasValue ? "disabled-button" : "btn btn-primary")" @onclick="() => AcknowledgeMessage(message.Id)">
                    Acknowledge
                </button>
            </td>
        </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7" class="text-center">No messages available to display.</td>
            </tr>
        }
    </tbody>
</BSTable>
<BSPagination Align="Align.Center" Pages="@_totalPages" @bind-Value="_currentPage" />


