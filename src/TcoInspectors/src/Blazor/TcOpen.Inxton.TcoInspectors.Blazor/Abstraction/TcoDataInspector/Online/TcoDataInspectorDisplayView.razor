@namespace TcoInspectors
@inherits RenderableComplexComponentBase<TcoDataInspector>

@using Vortex.Connector

<div class="card my-3">
    <div class="card-header">
        <a data-bs-toggle="collapse" href="#@ID" role="button" aria-expanded="false" aria-controls="@ID" style="color: inherit; text-decoration: inherit;">
            <div class="row">
                <h4 class="col-auto my-auto">@getNameOrSymbol()</h4>
                <svg width="24" height="24" fill="currentColor" class="bi bi-chevron-down ms-auto col-auto my-auto" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z" />
                </svg>
            </div>
        </a>
    </div>
    <div class="card-body row align-items-center">
        <div class="col-auto">
            <RenderableContentControl Context="@Component._data.RequiredStatus" Presentation="Display" />
        </div>
        <div class="col-auto">
            <RenderableContentControl Context="@Component._data.DetectedStatus" Presentation="Display" />
        </div>
        <div class="col-auto ms-auto">
            <RenderableContentControl Context="@Component._data.StarNotationEnabled" Presentation="Display" />
        </div>
        <div class="col-auto">
            <RenderableContentControl Context="@Component._data.IsByPassed" Presentation="Display" />
        </div>
        <div class="col-auto">
            <RenderableContentControl Context="@Component._data.IsExcluded" Presentation="Display" />
        </div>
        <div class="col-auto">
            <GenericIconView Result="@Component._data.Result.Shadow" />
        </div>
    </div>
    <div class="card-body collapse" id="@ID">
        <GenericTcoInspectorDataView Data="@Component._data" Presentation="Display" />
    </div>
</div>

@code{
    private string ID = "M" + Guid.NewGuid().ToString();

    public string getNameOrSymbol()
    {
        return string.IsNullOrEmpty(Component.AttributeName) ? Component.GetSymbolTail() : Component.AttributeName;
    }
}