@namespace TcoInspectors
@inherits RenderableComplexComponentBase<TcoAnalogueInspector>

@using Vortex.Connector

<div class="accordion my-3">
    <div class="accordion-item">
        <div class="accordion-header" style="border-bottom: 1px solid #dee2e6">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#@ID" aria-expanded="false" aria-controls="@ID">
                @getNameOrSymbol()
            </button>
        </div>
        <div class="accordion-body row align-items-center py-1">
            <div class="col-1">
                <RenderableContentControl Context="@Component._data.RequiredMin" Presentation="Control" />
            </div>
            <div class="col-1">
                <RenderableContentControl Context="@Component._data.DetectedStatus" Presentation="Control" />
            </div>
            <div class="col-1">
                <RenderableContentControl Context="@Component._data.RequiredMax" Presentation="Control" />
            </div>
            <div class="col-auto ms-auto">
                <RenderableContentControl Context="@Component._data.IsByPassed" Presentation="Control" />
            </div>
            <div class="col-auto">
                <RenderableContentControl Context="@Component._data.IsExcluded" Presentation="Control" />
            </div>
            <div class="col-auto">
                <GenericIconView Result="@Component._data.Result.Shadow" />
            </div>
        </div>
        <div id="@ID" class="accordion-collapse collapse" aria-labelledby="flush-headingOne" data-bs-parent="#accordionFlushExample">
            <div class="accordion-body py-1">
                <GenericTcoInspectorDataView Data="@Component._data" Presentation="Display" />
            </div>
        </div>
    </div>
</div>

@code{
    private string ID = "M" + Guid.NewGuid().ToString();

    public string getNameOrSymbol()
    {
        return string.IsNullOrEmpty(Component.AttributeName) ? Component.GetSymbolTail() : Component.AttributeName;
    }
}
