<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="ExampleContext" Id="{1aa2a6c1-d36a-0374-1754-fb6150365769}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK ExampleContext EXTENDS TcoCore.TcoContext
VAR
    Data            : ExampleInspectorsStruct := (Parent := THIS^);
    Components      : ExampleComponents       := (Parent := THIS^);
    GroupInspection : TcoInspectors.TcoInspectionGroup(THIS^);
    _sequence1      : TcoCore.TcoSequence(THIS^, eRestoreMode.None);
    _observer       : TcoCore.TcoSequencerObserver(THIS^);
    {attribute addProperty Name "Start sequence"}
    _sequence1Task 	: Sequence1Task(THIS^);
    _dialog        	: TcoCore.TcoDialog(THIS^);
    {attribute 'hide'}
    EmptyData 		: ExampleInspectorsStruct := (Parent := THIS^);

    _examples_2 	: Examples_2(THIS^);
	_examplesImplementationWithDone : ExamplesImplementationWithDone(THIS^);
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Main" Id="{f951dcde-2a62-0b5b-22de-91190916af80}">
      <Declaration><![CDATA[(*~
	<docu>
		<summary>
			Main method of the TcoContext. This is the entry point of any control logic that belongs to this context. 
			The call of this method is ensured by calling the <c>InstanceName.Run()</c> method, and it must not be called explicitly.
			This method is abstract, and it must be overridden in derived block.
		</summary>
	</docu>
~*)
METHOD PROTECTED  Main]]></Declaration>
      <Implementation>
        <ST><![CDATA[_sequence1Task(Sequence := _sequence1);
IF(_sequence1Task.Execute())THEN
	Sequence1();
END_IF;

_examples_2();
_examplesImplementationWithDone();

]]></ST>
      </Implementation>
    </Method>
    <Method Name="Sequence1" Id="{fef70385-7bed-099c-3214-bed4b6f98420}">
      <Declaration><![CDATA[METHOD Sequence1
VAR
    seq    : REFERENCE TO TcoCore.TcoSequence;
    answer : TcoCore.eDialogAnswer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[seq REF= _sequence1;

seq.Open();
seq.Observer := _observer;

IF (seq.Step(inStepID := 0,
    inEnabled := TRUE,
    inStepDescription := 'ASKING SOME QUESTION')) THEN
    //--------------------------------------------------------
//<StandardDialog>	
	answer := _dialog			
			.Show()	
			.WithType(eDialogType.Question)				
			.WithCaption('Ready to go?')
			.WithText('We are about to start the inspection sequence. Do we go ahead?')				
			.WithYesNo()
			.Answer;
			
	 IF (answer = TcoCore.eDialogAnswer.Yes) THEN    	 	
		seq.CompleteStep();
	 ELSIF(answer = TcoCore.eDialogAnswer.No) THEN
		_sequence1Task.Restore();
	 END_IF;	
//</StandardDialog>	 
    //--------------------------------------------------------			
END_IF;

IF (seq.Step(inStepID := 25,
    inEnabled := TRUE,
    inStepDescription := 'SETUP DATA')) THEN
    //--------------------------------------------------------    
	 	Data := EmptyData;
	
		Data.DmcInspector.Data.RequiredStatus := 'A#*';
		Data.DmcInspector.Data.StarNotationEnabled := TRUE;
		Data.DmcInspector.Data.PassTime := T#1500MS;    
		Data.DmcInspector.Data.FailTime := T#2S;
		Data.DmcInspector.Data.FailureDescription := 'Data inspection failed';
		Data.DmcInspector.Data.ErrorCode := '1';
		
		
		Data.BoltPresenceInspector.Data.RequiredStatus := TRUE;
		Data.BoltPresenceInspector.Data.PassTime := T#1500MS;    
		Data.BoltPresenceInspector.Data.FailTime := T#2S;	
		Data.BoltPresenceInspector.Data.NumberOfAllowedRetries := 2;
		Data.BoltPresenceInspector.Data.FailureDescription := 'Bolt inspection failed';
		Data.BoltPresenceInspector.Data.ErrorCode := '2';

		Data.Dimensions.DimX_Inspector.Data.PassTime := T#1500MS;    
		Data.Dimensions.DimX_Inspector.Data.FailTime := T#2S;
		Data.Dimensions.DimX_Inspector.Data.RequiredMin := 9.75;
		Data.Dimensions.DimX_Inspector.Data.RequiredMax := 10.25;
		Data.Dimensions.DimX_Inspector.Data.NumberOfAllowedRetries := 3;
		Data.Dimensions.DimX_Inspector.Data.FailureDescription := 'Dimx inspection failed';
		Data.Dimensions.DimX_Inspector.Data.ErrorCode := '3';
		
		Data.Dimensions.DimY_Inspector.Data.PassTime := T#1500MS;    
		Data.Dimensions.DimY_Inspector.Data.FailTime := T#2S;
		Data.Dimensions.DimY_Inspector.Data.RequiredMin := 9.75;
		Data.Dimensions.DimY_Inspector.Data.RequiredMax := 10.25;
		Data.Dimensions.DimY_Inspector.Data.FailureDescription := 'Dimy inspection failed';
		Data.Dimensions.DimY_Inspector.Data.ErrorCode := '4';

		Data.Dimensions.DimZ_Inspector.Data.PassTime := T#1500MS;    
		Data.Dimensions.DimZ_Inspector.Data.FailTime := T#2S;
		Data.Dimensions.DimZ_Inspector.Data.RequiredMin := 9.75;
		Data.Dimensions.DimZ_Inspector.Data.RequiredMax := 10.25;
		Data.Dimensions.DimZ_Inspector.Data.FailureDescription := 'Dimz inspection failed';
		Data.Dimensions.DimZ_Inspector.Data.ErrorCode := '5';		
		
		Data.DmcInspector.Data.NumberOfAllowedRetries := 5;    
		seq.CompleteStep();
    //--------------------------------------------------------			
END_IF;

IF (seq.Step(inStepID := 50,
    inEnabled := TRUE,
    inStepDescription := 'INIT')) THEN
    //--------------------------------------------------------    	 	       
		seq.CompleteStep();
    //--------------------------------------------------------			
END_IF;

IF (seq.Step(inStepID := 100,
    inEnabled := TRUE,
    inStepDescription := 'INSPECT DMC CODE - WHEN CARRY ON')) THEN
    //--------------------------------------------------------
    Data.DmcInspector.WithCoordinator(seq)
		.Inspect(Components.DmcReader)		
        .UpdateComprehensiveResult(Data.OverallResult)
        .OnFail()
		.CarryOn();
    //--------------------------------------------------------			
END_IF;

//<TcoDigitalInspector>	
IF (seq.Step(inStepID := 200,
    inEnabled := TRUE,
    inStepDescription := 'INSPECT BOLT PRESENCE - ASK WHAT TO DO')) THEN
    //--------------------------------------------------------	
    Data.BoltPresenceInspector
		.WithCoordinator(seq)
		.Inspect(Components.BoltPresenceSensor)
		.UpdateComprehensiveResult(Data.OverallResult)
        .OnFail()
        .Dialog(300);
    //--------------------------------------------------------			
END_IF;
//<TcoDigitalInspector>	



IF (seq.Step(inStepID := 300,
    inEnabled := TRUE,
    inStepDescription := 'INSPECT DIMENSIONS - TERMINATE')) THEN
    //--------------------------------------------------------
    GroupInspection
		.WithCoordinator(seq)
		.Act()	
		.NormalizeRetries(Data.Dimensions.DimX_Inspector)
		.NormalizeRetries(Data.Dimensions.DimY_Inspector)
		.NormalizeRetries(Data.Dimensions.DimZ_Inspector)
        .Inspect(Data.Dimensions.DimX_Inspector.WithCoordinator(seq).Inspect(Components.DimX_Sensor))
        .Inspect(Data.Dimensions.DimY_Inspector.WithCoordinator(seq).Inspect(Components.DimY_Sensor))
        .Inspect(Data.Dimensions.DimZ_Inspector.WithCoordinator(seq).Inspect(Components.DimZ_Sensor))	
		.UpdateComprehensiveResult(Data.OverallResult)		
		.OnFail()
		.Dialog(300);			
    //--------------------------------------------------------			
END_IF;

IF (seq.Step(inStepID := seq.RESTORE_STEP_ID,
    inEnabled := TRUE,
    inStepDescription := 'RETURN TO THE START OF THE SEQUENCE')) THEN
    //--------------------------------------------------------	
    	seq.CompleteSequence();
    //--------------------------------------------------------			
END_IF;

seq.Close();]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>