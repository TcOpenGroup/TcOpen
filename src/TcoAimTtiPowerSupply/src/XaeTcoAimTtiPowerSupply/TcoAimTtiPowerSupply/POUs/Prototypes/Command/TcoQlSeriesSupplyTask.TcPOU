<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="TcoQlSeriesSupplyTask" Id="{eba43308-0491-0df8-2ce5-d69a64ae6b29}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK PUBLIC  TcoQlSeriesSupplyTask  EXTENDS TcoCore.TcoRemoteTask 
VAR_IN_OUT
    inoConfig 	: TcoQlSeriesSupply_Config_v_1_x_x;
	inoStatus 	: TcoQlSeriesSupply_Status_v_1_x_x;	
END_VAR
VAR
	

	_errorMessage:TcoCore.TcoMessenger(THIS^);
    {attribute 'hide'} 
	_progress : INT := 0;
    {attribute 'hide'} 
	_infoTimer :  TON;
    {attribute 'hide'} 
	_errorTimer :  TON;
	{attribute 'hide'} 
	_timer :  TON;
    {attribute 'hide'} 
	_varInfo : __SYSTEM.VAR_INFO;
    {attribute 'hide'} 
	_sb : TcoCore.StringBuilder;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^();
]]></ST>
    </Implementation>
    <Method Name="CallTimers" Id="{a5654fd0-a149-0dcb-19a1-9878c0d123fe}">
      <Declaration><![CDATA[METHOD CallTimers
VAR_INPUT
	inValue : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF  __ISVALIDREF(inoConfig) AND THIS^.inoConfig.ErrorTime <> T#0S OR NOT inValue THEN  
_errorTimer(IN := inValue, PT := THIS^.inoConfig.ErrorTime);
END_IF;
IF  __ISVALIDREF(inoConfig) AND THIS^.inoConfig.InfoTime <>T#0S OR NOT inValue THEN  
_infoTimer(IN := inValue, PT := THIS^.inoConfig.InfoTime);
END_IF;]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnStart" Id="{4cd5829f-e14c-0387-2550-236221cfb22c}">
      <Declaration><![CDATA[METHOD PROTECTED OnStart ]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.OnStart();
IF  __ISVALIDREF(inoStatus) THEN  THIS^.inoStatus.ActionDescription := '<#Command started.#>'; END_IF; 
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Restore" Id="{8203318a-8bed-073b-0f67-a13c2e2de456}">
      <Declaration><![CDATA[(*~
	<docu>
		<summary>
			Restores this instance to the Ready state. Can be called explicitly or from within one of the restore mechanisms.
			<para>
				See also <see cref="PlcDocu.TcoCore.TcoTask.AutoRestorable()"/>
			</para>
		</summary>			
	</docu>	
~*)
METHOD Restore : ITcoRestorable]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.Restore();
_progress := 0;
_timer(In:=FALSE);
CallTimers(FALSE);
Messenger.UnPin();
_errorMessage.UnPin();]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>