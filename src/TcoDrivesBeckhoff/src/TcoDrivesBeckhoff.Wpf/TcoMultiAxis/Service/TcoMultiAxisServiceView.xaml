<UserControl
    x:Class="TcoDrivesBeckhoff.TcoMultiAxisServiceView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:TcoDrivesBeckhoff"
    xmlns:materialdesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vortex="http://vortex.mts/xaml" 

    xmlns:tcodrivesbeckhoff="clr-namespace:TcoDrivesBeckhoff;assembly=TcoDrivesBeckhoffConnector"
    mc:Ignorable="d">
    <d:UserControl.DataContext>
        <local:TcoMultiAxisServiceViewModel/>
    </d:UserControl.DataContext>
    <UserControl.Resources>
     
        
    </UserControl.Resources>
    <vortex:TcoComponentView >
        <vortex:TcoComponentView.ComponentHeader>

            <WrapPanel VerticalAlignment="Center"    >
                <WrapPanel.Resources>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignBody1TextBlock}"/>
                </WrapPanel.Resources>
                <!--<WrapPanel  DataContext="{Binding _axisStatus.Disabled}"  Visibility="{Binding Cyclic, Converter={vortex:BooleanToVisibilityConverter}}" Margin=" 5,0">
                    <materialdesign:PackIcon Kind="WarningBox"  Foreground="{StaticResource Warning}"  VerticalAlignment="Center"/>
                    <TextBlock  Text="Disabled"  Foreground="{StaticResource Warning}"/>
                </WrapPanel>
                <WrapPanel  DataContext="{Binding _axisStatus.Operational}"  Visibility="{Binding Cyclic, Converter={vortex:BooleanToVisibilityConverter}}" Margin=" 5,0">
                    <materialdesign:PackIcon Kind="CheckBox"  Foreground="{StaticResource Notification}"  VerticalAlignment="Center"/>
                    <TextBlock  Text="Ready"  Foreground="{StaticResource Notification}"/>
                </WrapPanel>
                <WrapPanel  DataContext="{Binding _axisStatus.Homed}"  Visibility="{Binding Cyclic, Converter={vortex:BooleanToVisibilityConverter}}" Margin=" 5,0">
                    <materialdesign:PackIcon Kind="CheckBox"  Foreground="{StaticResource Notification}"  VerticalAlignment="Center"/>
                    <TextBlock  Text="Homed"  Foreground="{StaticResource Notification}"/>
                </WrapPanel>
                <WrapPanel  DataContext="{Binding _axisStatus.Homed}"  Visibility="{Binding Cyclic, Converter={vortex:BooleanToVisibilityConverter},ConverterParameter=false}" Margin=" 5,0">
                    <materialdesign:PackIcon Kind="CheckBox"  Foreground="{StaticResource Warning}"  VerticalAlignment="Center"/>
                    <TextBlock  Text="Not Homed!"  Foreground="{StaticResource Warning}"/>
                </WrapPanel>
                <WrapPanel  Visibility="{Binding _axisStatus.Error.Cyclic, Converter={vortex:BooleanToVisibilityConverter}}" Margin=" 5,0">
                        <materialdesign:PackIcon Kind="AlertBox"  Foreground="{StaticResource Errors}"  VerticalAlignment="Center"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding _axisStatus.ErrorId.Cyclic}" Foreground="{StaticResource Errors}"    Visibility="{Binding _axisStatus.Error.Cyclic, Converter={vortex:BoolToVisibilityConverter}}"/>
                </WrapPanel>-->
               

            </WrapPanel>

        </vortex:TcoComponentView.ComponentHeader>
        <vortex:TcoComponentView.ComponentDetails>
            <ScrollViewer MaxHeight="1000"  HorizontalScrollBarVisibility="Disabled" >
                <Grid >
                     <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition></RowDefinition>

                    </Grid.RowDefinitions>



                    <StackPanel Orientation="Vertical">

                        <vortex:RenderableContentControl   DataContext="{Binding Component._axis1}"  PresentationType="Service" />
                        <vortex:RenderableContentControl   DataContext="{Binding Component._axis2}"  PresentationType="Service" />
                        <vortex:RenderableContentControl   DataContext="{Binding Component._axis3}"  PresentationType="Service" />
                        <vortex:RenderableContentControl   DataContext="{Binding Component._axis4}"  PresentationType="Service" />

                    </StackPanel>

                    <WrapPanel Grid.Column="1" Grid.Row="1">
                        <WrapPanel.Resources>
                            <Style TargetType="GroupBox"  BasedOn="{StaticResource MaterialDesignCardGroupBox}">
                                <Setter Property="MinWidth" Value="300"></Setter>
                                <Setter Property="Margin" Value="5,0,0,5"></Setter>


                            </Style>
                        </WrapPanel.Resources>




                        <GroupBox Padding="10"   Header="POSITIONS" HorizontalAlignment="Stretch">
                            <!--<vortex:RenderableContentControl   DataContext="{Binding Component._positions}"   />-->
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition></RowDefinition>

                                    <RowDefinition Height="auto"></RowDefinition>
                                </Grid.RowDefinitions>

                    
                                    <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Vertical">
                                        <WrapPanel HorizontalAlignment="Center">
                                            <TextBlock VerticalAlignment="Center" Text="Selected"></TextBlock>
                                            <ComboBox Margin="10,0"  MinWidth="150" VerticalAlignment="Center" ItemsSource="{Binding Component.RepositoryHandler.ListOfDataSets}" 
                                         SelectedItem="{Binding Component.SetId}"></ComboBox>
                                        </WrapPanel>
                                        <WrapPanel Margin="5" HorizontalAlignment="Center">                                          
                                            <Button Margin="10,0"  VerticalAlignment="Center" Command="{Binding DeleteDataSetCommand}" Content="DELETE SELECTED "></Button>

                                
                                        <TextBlock VerticalAlignment="Center"  Margin="5,0"  Text="SetId:"/>
                                        <TextBox MinWidth="150"  VerticalAlignment="Center" IsEnabled="True" Text="{Binding Component.NewSetId, Mode=TwoWay}"></TextBox>
                                        <Button Margin="10,0"  VerticalAlignment="Center" Command="{Binding CreateNewDataSetCommand}" Content="CREATE"></Button>
                                            </WrapPanel>

                                        </StackPanel>
                       


                             
                                <DataGrid Grid.Row="1" ItemsSource="{Binding Component.Positions}"
                                      Margin="5"
                                      HorizontalAlignment="Stretch"
                                      SelectedItem="{Binding SelectedItem}" 
                                      AutoGenerateColumns="False" 
                                      SelectionMode="Single"
                                      SelectionUnit="FullRow"
                                      CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False">
                                        <DataGrid.Columns>
                                        <DataGridTextColumn Header="Name" IsReadOnly="True" Binding="{Binding HumanReadable}"></DataGridTextColumn>

                                        <DataGridTextColumn Header="{Binding Axis1.Position.AttributeName}" IsReadOnly="False" Binding="{ Binding Axis1.Position.Cyclic}"/>
                                        <DataGridTextColumn IsReadOnly="True" Width="10"></DataGridTextColumn>
                                        <DataGridTextColumn Header="Velocity" IsReadOnly="False" Binding="{ Binding Axis1.Velocity.Cyclic}"/>
                                        <DataGridTextColumn Header="Acc." IsReadOnly="False" Binding="{ Binding Axis1.Acceleration.Cyclic}"/>
                                        <DataGridTextColumn Header="Dec." IsReadOnly="False" Binding="{ Binding Axis1.Deceleration.Cyclic}"/>
                                        <DataGridTextColumn Header="Jerk" IsReadOnly="False" Binding="{ Binding Axis1.Jerk.Cyclic}"/>

                                        <DataGridTextColumn Header="Position" IsReadOnly="False" Binding="{ Binding Axis2.Position.Cyclic}"/>
                                        <DataGridTextColumn IsReadOnly="True" Width="10"></DataGridTextColumn>
                                        <DataGridTextColumn Header="Velocity" IsReadOnly="False" Binding="{ Binding Axis2.Velocity.Cyclic}"/>
                                        <DataGridTextColumn Header="Acc." IsReadOnly="False" Binding="{ Binding Axis2.Acceleration.Cyclic}"/>
                                        <DataGridTextColumn Header="Dec." IsReadOnly="False" Binding="{ Binding Axis2.Deceleration.Cyclic}"/>
                                        <DataGridTextColumn Header="Jerk" IsReadOnly="False" Binding="{ Binding Axis2.Jerk.Cyclic}"/>

                                        <DataGridTextColumn Header="Position" IsReadOnly="False" Binding="{ Binding Axis3.Position.Cyclic}"/>
                                        <DataGridTextColumn IsReadOnly="True" Width="10"></DataGridTextColumn>
                                        <DataGridTextColumn Header="Velocity" IsReadOnly="False" Binding="{ Binding Axis3.Velocity.Cyclic}"/>
                                        <DataGridTextColumn Header="Acc." IsReadOnly="False" Binding="{ Binding Axis3.Acceleration.Cyclic}"/>
                                        <DataGridTextColumn Header="Dec." IsReadOnly="False" Binding="{ Binding Axis3.Deceleration.Cyclic}"/>
                                        <DataGridTextColumn Header="Jerk" IsReadOnly="False" Binding="{ Binding Axis3.Jerk.Cyclic}"/>
                                            
                                        <DataGridTextColumn Header="Position" IsReadOnly="False" Binding="{ Binding Axi42.Position.Cyclic}"/>
                                        <DataGridTextColumn IsReadOnly="True" Width="10"></DataGridTextColumn>
                                        <DataGridTextColumn Header="Velocity" IsReadOnly="False" Binding="{ Binding Axis4.Velocity.Cyclic}"/>
                                        <DataGridTextColumn Header="Acc." IsReadOnly="False" Binding="{ Binding Axis4.Acceleration.Cyclic}"/>
                                        <DataGridTextColumn Header="Dec." IsReadOnly="False" Binding="{ Binding Axis4.Deceleration.Cyclic}"/>
                                        <DataGridTextColumn Header="Jerk" IsReadOnly="False" Binding="{ Binding Axis4.Jerk.Cyclic}"/>


                                        <DataGridTextColumn IsReadOnly="True" Header="Symbol" Binding="{Binding Symbol}"></DataGridTextColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                          

                                <WrapPanel Grid.Row="2"  HorizontalAlignment="Center">
                                    <WrapPanel.Resources>
                                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatMidBgButton}">
                                            <Setter Property="Margin" Value="5"></Setter>
                                            <Setter Property="MinWidth" Value="100"></Setter>

                                        </Style>
                                        <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                                            <Setter Property="Margin" Value="5"></Setter>
                                            <Setter Property="VerticalAlignment" Value="Center"></Setter>

                                        </Style>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignTextBlock}">
                                            <Setter Property="Margin" Value="5"></Setter>
                                            <Setter Property="VerticalAlignment" Value="Center"></Setter>

                                        </Style>
                                    </WrapPanel.Resources>
                                 
                                    <Button Command="{Binding TeachPositionCommand}" Content="TEACH"></Button>
                                    <Button Command="{Binding MoveToPositionCommand}" Content="MOVE TO POSITION"></Button>
                                    <Button Command="{Binding LoadPositionsCommand}" Content="LOAD"></Button>
                                    <Button Command="{Binding SavePositionsCommand}" Content="SAVE"></Button>
                                    <WrapPanel Grid.Row="2" Grid.Column="0" HorizontalAlignment="Center">
                                        <WrapPanel.Resources>

                                        </WrapPanel.Resources>
                                        <TextBlock Text="Vel:"/>
                                        <TextBox IsEnabled="True" Text="{Binding DefaultValues.Velocity , Mode=TwoWay}"></TextBox>
                                        <TextBlock Text="Acc:"/>
                                        <TextBox Text="{Binding DefaultValues.Acceleration , Mode=TwoWay}"></TextBox>
                                        <TextBlock Text="Dec:"/>
                                        <TextBox Text="{Binding DefaultValues.Deceleration , Mode=TwoWay}"></TextBox>
                                        <TextBlock Text="Jerk:"/>
                                        <TextBox Text="{Binding DefaultValues.Jerk, Mode=TwoWay}"></TextBox>
                                        <Button Command="{Binding FillDefaultParamsCommand}" Content="WRITE DEFAULT VALUES"></Button>


                                    </WrapPanel>
                            
                                </WrapPanel>
                             
                            </Grid>

                        </GroupBox>

                    </WrapPanel>
                </Grid>
            </ScrollViewer>
        </vortex:TcoComponentView.ComponentDetails>
    </vortex:TcoComponentView>
</UserControl>
