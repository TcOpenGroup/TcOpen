<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="SoEResetTask" Id="{fa3e4a13-c840-02cf-1af1-252355c7ca7c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK SoEResetTask EXTENDS TcoCore.TcoTask IMPLEMENTS ITcoDriveSimple
VAR
    {attribute 'hide'}
    _axisRef : REFERENCE TO TcoAxisRef;
    {attribute 'hide'}
    _soEReset : Tc2_MC2_Drive.FB_SoEReset;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT __ISVALIDREF(_axisRef) THEN
    IF __ISVALIDREF(DriveRef) THEN
        _axisRef REF= DriveRef.AxisRef;
    ELSE
        RETURN;
    END_IF
END_IF

IF Execute() THEN
    _soEReset(Axis := _axisRef);
    DoneWhen(NOT _soEReset.Busy);
    ThrowWhen(_soEReset.Error);
END_IF]]></ST>
    </Implementation>
    <Property Name="DriveRef" Id="{0afc66a9-03c1-038c-382f-b88b851d83f4}">
      <Declaration><![CDATA[PROPERTY DriveRef : REFERENCE TO TcoDriveSimple]]></Declaration>
      <Get Name="Get" Id="{647a1948-d513-0533-1d0c-76c1b9e327f8}">
        <Declaration><![CDATA[VAR
    _drive : ITcoDriveSimple := 0;
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF __QUERYINTERFACE(THIS^._Parent, _drive) THEN
    DriveRef REF= _drive.DriveRef;
END_IF]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_init" Id="{ded3e489-07ea-0965-1c21-a0c3d43cfdbc}">
      <Declaration><![CDATA[METHOD PUBLIC FB_init : BOOL
VAR_INPUT
    bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
    bInCopyCode : BOOL; // if TRUE, the instance afterwards gets moved into the copy code (online change)
    Parent : ITcoObject;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.FB_init(bInitRetains := bInitRetains, bInCopyCode := bInCopyCode, Parent := Parent);]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnDone" Id="{510221f1-82a4-0289-1ad3-a2126f2ddd33}">
      <Declaration><![CDATA[(*~
	<docu>
		<summary>
			Executes when task reaches the ```Done``` state .
		</summary>			
	</docu>	
~*)
METHOD PROTECTED OnDone
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_soEReset(NetId := _axisRef.ADS.NetId,Execute := FALSE, Axis := _axisRef);
THIS^.DriveRef._movementState.Restore();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnError" Id="{d11a1786-b4b2-09f3-3d23-5d61a2eb6e17}">
      <Declaration><![CDATA[(*~
	<docu>
		<summary>
			Executes when task reaches the ```Error``` state.
			<para>
				Do not confuse with <see cref="TcoTask.PlcTcoTask.WhileError()"/>, that is called cyclically until '''Error''' state is left.
			</para>
		</summary>			
	</docu>	
~*)
METHOD PROTECTED OnError
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.DriveRef._movementState.Restore();
IF NOT _axisRef.Status.Error THEN
	DriveRef.SetErrorID(DriveRef._soEResetTask._soEReset.AdsErrId);
 END_IF
 _soEReset(NetId := _axisRef.ADS.NetId,Execute := FALSE, Axis := _axisRef);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnStart" Id="{dbb857ee-db40-0990-0525-d53519b6d838}">
      <Declaration><![CDATA[METHOD PROTECTED OnStart 
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_soEReset(NetId := _axisRef.ADS.NetId,Execute := FALSE, Axis := _axisRef);
_soEReset(NetId := _axisRef.ADS.NetId,Execute := TRUE, Axis := _axisRef);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Restore" Id="{1cf67040-075f-0da2-2fcb-3c47859237d9}">
      <Declaration><![CDATA[(*~
	<docu>
		<summary>
			Restores this instance to the Ready state. Can be called explicitly or from within one of the restore mechanisms.
			<para>
				See also <see cref="TcoTask.PlcTcoTask.AutoRestorable()"/>
			</para>
		</summary>			
	</docu>	
~*)
METHOD Restore : ITcoRestorable]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.Restore();]]></ST>
      </Implementation>
    </Method>
    <Method Name="WhileError" Id="{c72af5fa-cfd1-09ef-3375-512d8ec6c69d}">
      <Declaration><![CDATA[(*~
	<docu>
		<summary>
			Executes until task is in ```Error``` state .
		</summary>			
	</docu>	
~*)
METHOD PROTECTED WhileError
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT _axisRef.Status.Error THEN
	DriveRef.SetErrorID(DriveRef._soEResetTask._soEReset.AdsErrId);
   _soEReset(Axis := _axisRef, Execute := FALSE);
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>