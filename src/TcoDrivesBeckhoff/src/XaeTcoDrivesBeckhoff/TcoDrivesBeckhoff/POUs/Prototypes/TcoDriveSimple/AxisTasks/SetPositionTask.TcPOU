<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="SetPositionTask" Id="{0f3e15e0-dac1-0bfc-35ff-f09121d4b609}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK SetPositionTask EXTENDS TcoCore.TcoTask IMPLEMENTS ITcoDriveSimple
VAR
    {attribute addProperty Name "<#Position#>"}
    _position : LREAL;
    {attribute addProperty Name "<#Mode#>"}
    _mode : eSetPositionMode;
END_VAR
VAR
    {attribute 'hide'}
    _axisRef : REFERENCE TO TcoAxisRef;
    {attribute 'hide'}
    _mcSetPosition : Tc2_MC2.MC_SetPosition;
    {attribute 'hide'}
    _mc_mode : BOOL;
    {attribute 'hide'}
    _message : STRING(125);
    {attribute 'hide'}
	_dummyPreconditionOK : BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT __ISVALIDREF(_axisRef) THEN
    IF __ISVALIDREF(DriveRef) THEN
        _axisRef REF= DriveRef.AxisRef;
    ELSE
        RETURN;
    END_IF
END_IF

IF Execute() THEN
    _dummyPreconditionOK := TRUE;

    IF NOT DriveRef._movementState.MovePreconditionsOk(THIS^, _dummyPreconditionOK) THEN
        Messenger.Error('To be implemented');
        RETURN;
    END_IF

    _mcSetPosition(Axis := _axisRef, Execute := TRUE, Position := _position);
    DoneWhen(_mcSetPosition.Done);
    ThrowWhen(_mcSetPosition.Error);
END_IF]]></ST>
    </Implementation>
    <Property Name="DriveRef" Id="{9faf9563-8fe2-0661-3e84-611676a37b5a}">
      <Declaration><![CDATA[PROPERTY DriveRef : REFERENCE TO TcoDriveSimple]]></Declaration>
      <Get Name="Get" Id="{1c35a998-3024-0e23-00d6-b54072e8bffe}">
        <Declaration><![CDATA[VAR
    _drive : ITcoDriveSimple := 0;
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF __QUERYINTERFACE(THIS^._Parent, _drive) THEN
    DriveRef REF= _drive.DriveRef;
END_IF]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_init" Id="{7283c3d3-d8b2-0303-2cb7-92285906a7e5}">
      <Declaration><![CDATA[METHOD PUBLIC FB_init : BOOL
VAR_INPUT
    bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
    bInCopyCode : BOOL; // if TRUE, the instance afterwards gets moved into the copy code (online change)
    Parent : ITcoObject;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.FB_init(bInitRetains := bInitRetains, bInCopyCode := bInCopyCode, Parent := Parent);]]></ST>
      </Implementation>
    </Method>
    <Method Name="InvokeWithParams" Id="{67797632-85c3-0d01-2507-e70b095630da}">
      <Declaration><![CDATA[METHOD INTERNAL InvokeWithParams : ITcoTaskStatus
VAR_INPUT
    inPosition : LREAL;
    inMode : eSetPositionMode;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_position := inPosition;
_mode := inMode;
InvokeWithParams := THIS^.Invoke();]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnDone" Id="{fca9e9ba-5551-01ee-2de0-cb5d4f8b6e5c}">
      <Declaration><![CDATA[(*~
	<docu>
		<summary>
			Executes when task reaches the ```Done``` state .
		</summary>			
	</docu>	
~*)
METHOD PROTECTED OnDone
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_mcSetPosition(Axis := _axisRef, Execute := FALSE);
THIS^.DriveRef._movementState.Restore();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnError" Id="{c6448ca0-70a4-08b2-10ac-09c391131b59}">
      <Declaration><![CDATA[(*~
	<docu>
		<summary>
			Executes when task reaches the ```Error``` state.
			<para>
				Do not confuse with <see cref="TcoTask.PlcTcoTask.WhileError()"/>, that is called cyclically until '''Error''' state is left.
			</para>
		</summary>			
	</docu>	
~*)
METHOD PROTECTED OnError
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.DriveRef._movementState.Restore();

IF NOT _axisRef.Status.Error THEN
    DriveRef.SetErrorID(DriveRef._setPositionTask._mcSetPosition.ErrorID);
END_IF

_mcSetPosition(Axis := _axisRef, Execute := FALSE);]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnStart" Id="{6601a4a2-967c-0153-1048-59a593730fea}">
      <Declaration><![CDATA[METHOD PROTECTED OnStart 
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Tco_TO_Tc2MC2_SetPositionMode(_mode, _mc_mode) THEN
    _message := Tc2_Standard.CONCAT('Unable to cast _mode variable of type TcoDrivesBeckhoff.eSetPositionMode (', TO_STRING(_mode));
    _message := Tc2_Standard.CONCAT(_message, ') to the type BOOL!!!');
    THIS^.Messenger.Post(_message, TcoCore.eMessageCategory.ProgrammingError);
    ThrowWhen(TRUE);
    RETURN;
END_IF

_mcSetPosition(Axis := _axisRef, Execute := FALSE);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Restore" Id="{33a6b430-fc43-0769-1ad1-7e8a3938d411}">
      <Declaration><![CDATA[(*~
	<docu>
		<summary>
			Restores this instance to the Ready state. Can be called explicitly or from within one of the restore mechanisms.
			<para>
				See also <see cref="TcoTask.PlcTcoTask.AutoRestorable()"/>
			</para>
		</summary>			
	</docu>	
~*)
METHOD Restore : ITcoRestorable]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.Restore();]]></ST>
      </Implementation>
    </Method>
    <Method Name="WhileError" Id="{fce8bf04-eb72-07e6-1188-99bd90b2f028}">
      <Declaration><![CDATA[(*~
	<docu>
		<summary>
			Executes until task is in ```Error``` state .
		</summary>			
	</docu>	
~*)
METHOD PROTECTED WhileError
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT _axisRef.Status.Error THEN
	DriveRef.SetErrorID(DriveRef._setPositionTask._mcSetPosition.ErrorID);
    _mcSetPosition(Axis := _axisRef, Execute := FALSE);
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>