<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="TcoDriveSimpleTestContext" Id="{eb079fb3-48a6-04a2-0434-bd84aa928492}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TcoDriveSimpleTestContext EXTENDS TcoCore._internals_TcoContext
VAR
    _sut : TcoDriveSimpleTest(THIS^);
    _callMyPlcInstance : BOOL := FALSE;
    _enable : BOOL;
    _enablePositive : BOOL;
    _enableNegative : BOOL;
    _calibrationCam : BOOL;
    _position : LREAL;
    _velocity : LREAL;
    _acceleration : LREAL;
    _deceleration : LREAL;
    _jerk : LREAL;	
    _inString : STRING;
    _done : BOOL;
    _arranged : BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Main" Id="{a8979dcb-427e-0a51-16bc-eaf1ddb910e1}">
      <Declaration><![CDATA[METHOD PROTECTED Main

]]></Declaration>
      <Implementation>
        <ST><![CDATA[_sut(inEnable := _enable,
    inEnablePositive := _enablePositive,
    inEnableNegative := _enableNegative,
    inCalibrationCam := _calibrationCam,
    inoAxisRef := GVL.Axis1);

CASE _testId OF
    eTcoDriveSimpleTests.Restore:
        _sut.Restore();
    eTcoDriveSimpleTests.CleanUp:
        _sut._messenger.Clear();
    {region "T003_Message"}
    eTcoDriveSimpleTests.Message:
        _sut.Messenger.Error(_inString);
    {endregion}
    {region "T004_PowerDisable"}
    eTcoDriveSimpleTests.PowerDisable:
        _enable := FALSE;
    {endregion}
    {region "T005_PowerEnable"}
    eTcoDriveSimpleTests.PowerEnable:
        _enable := TRUE;
    {endregion}
    {region "T006_Reset"}
    eTcoDriveSimpleTests.Reset:
        _sut.Reset();
    {endregion}
    {region "T007_MoveRelativePositiveWithDisabledPositiveDirection"}
    eTcoDriveSimpleTests.MoveRelativePositiveWithDisabledPositiveDirection:
        _enable := TRUE;
        _enablePositive := FALSE;
        _enableNegative := FALSE;

        _sut.MoveRelative(inDistance := _position,
            inVelocity := _velocity,
            inAcceleration := _acceleration,
            inDeceleration := _deceleration,
            inJerk := _jerk);
    {endregion}
    {region "T008_MoveRelativePositiveWithEnabledPositiveDirection"}
    eTcoDriveSimpleTests.MoveRelativePositiveWithEnabledPositiveDirection:
        _enable := TRUE;
        _enablePositive := TRUE;
        _enableNegative := FALSE;

        _sut.MoveRelative(inDistance := _position,
            inVelocity := _velocity,
            inAcceleration := _acceleration,
            inDeceleration := _deceleration,
            inJerk := _jerk);
    {endregion}
    {region "T009_MoveRelativeNegativeWithDisabledNegativeDirection"}
    eTcoDriveSimpleTests.MoveRelativeNegativeWithDisabledNegativeDirection:
        _enable := TRUE;
        _enablePositive := FALSE;
        _enableNegative := FALSE;

        _sut.MoveRelative(inDistance := _position,
            inVelocity := _velocity,
            inAcceleration := _acceleration,
            inDeceleration := _deceleration,
            inJerk := _jerk);
    {endregion}
    {region "T010_MoveRelativeNegativeWithEnabledNegativeDirection"}
    eTcoDriveSimpleTests.MoveRelativeNegativeWithEnabledNegativeDirection:
        _enable := TRUE;
        _enablePositive := FALSE;
        _enableNegative := TRUE;

        _sut.MoveRelative(inDistance := _position,
            inVelocity := _velocity,
            inAcceleration := _acceleration,
            inDeceleration := _deceleration,
            inJerk := _jerk);
    {endregion}
    {region "T011_HommingDirect"}
    eTcoDriveSimpleTests.HommingDirect:
        _sut.Home(inPosition := _position,
            inHomingMode := TcoDrivesBeckhoff.eHomingMode.MC_Direct,
            inClearPositionLag := FALSE,
            inSearchDirection := TcoDrivesBeckhoff.eDirection.MC_Undefined_Direction,
            inSearchVelocity := _velocity,
            inSyncDirection := TcoDrivesBeckhoff.eDirection.MC_Undefined_Direction,
            inSyncVelocity := _velocity,
            inReferenceMode := TcoDrivesBeckhoff.eEncoderReferenceMode.ENCODERREFERENCEMODE_DEFAULT);
    {endregion}
    {region "T012_MoveVelocityPositiveWithDisabledPositiveDirection"}
    eTcoDriveSimpleTests.MoveVelocityPositiveWithDisabledPositiveDirection:
        _enable := TRUE;
        _enablePositive := FALSE;
        _enableNegative := FALSE;

        _sut.MoveVelocity(inVelocity := _velocity,
            inAcceleration := _acceleration,
            inDeceleration := _deceleration,
            inJerk := _jerk,
            inDirection := TcoDrivesBeckhoff.eDirection.MC_Positive_Direction);
    {endregion}
    {region "T013_MoveVelocityPositiveWithEnabledPositiveDirection"}
    eTcoDriveSimpleTests.MoveVelocityPositiveWithEnabledPositiveDirection:
        _enable := TRUE;
        _enablePositive := TRUE;
        _enableNegative := FALSE;

        _sut.MoveVelocity(inVelocity := _velocity,
            inAcceleration := _acceleration,
            inDeceleration := _deceleration,
            inJerk := _jerk,
            inDirection := TcoDrivesBeckhoff.eDirection.MC_Positive_Direction);
    {endregion}
    {region "T014_Stop"}
    eTcoDriveSimpleTests.Stop:
        _sut.Stop(inDeceleration := _deceleration, inJerk := _jerk);
    {endregion}
    {region "T015_MoveVelocityNegativeWithDisabledNegativeDirection"}
    eTcoDriveSimpleTests.MoveVelocityNegativeWithDisabledNegativeDirection:
        _enable := TRUE;
        _enablePositive := FALSE;
        _enableNegative := FALSE;

        _sut.MoveVelocity(inVelocity := _velocity,
            inAcceleration := _acceleration,
            inDeceleration := _deceleration,
            inJerk := _jerk,
            inDirection := TcoDrivesBeckhoff.eDirection.MC_Negative_Direction);
    {endregion}
    {region "T016_MoveVelocityNegativeWithEnabledNegativeDirection"}
    eTcoDriveSimpleTests.MoveVelocityNegativeWithEnabledNegativeDirection:
        _enable := TRUE;
        _enablePositive := FALSE;
        _enableNegative := TRUE;

        _sut.MoveVelocity(inVelocity := _velocity,
            inAcceleration := _acceleration,
            inDeceleration := _deceleration,
            inJerk := _jerk,
            inDirection := TcoDrivesBeckhoff.eDirection.MC_Negative_Direction);
{endregion}
END_CASE]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>