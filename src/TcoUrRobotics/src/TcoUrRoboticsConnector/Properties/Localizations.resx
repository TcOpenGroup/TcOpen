<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="___Emergency_stop_active__" xml:space="preserve">
    <value>Emergency stop active</value>
  </data>
  <data name="___Stopped_due_safety__" xml:space="preserve">
    <value>Stopped due safety</value>
  </data>
  <data name="___Status__" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="___Control__" xml:space="preserve">
    <value>Control</value>
  </data>
  <data name="___Config__" xml:space="preserve">
    <value>Config</value>
  </data>
  <data name="___PN_Error__" xml:space="preserve">
    <value>PN Error</value>
  </data>
  <data name="___Start_at_Main__" xml:space="preserve">
    <value>Start at Main</value>
  </data>
  <data name="___Start_motors_and_program__" xml:space="preserve">
    <value>Start motors and program</value>
  </data>
  <data name="___Start_program__" xml:space="preserve">
    <value>Start program</value>
  </data>
  <data name="___Start_motors__" xml:space="preserve">
    <value>Start motors</value>
  </data>
  <data name="___Start_movements__" xml:space="preserve">
    <value>Start movements</value>
  </data>
  <data name="___Start_motors_program_and_movements__" xml:space="preserve">
    <value>Start motors program and movements</value>
  </data>
  <data name="___Stop_movements__" xml:space="preserve">
    <value>Stop movements</value>
  </data>
  <data name="___Stop_movenents_and_program__" xml:space="preserve">
    <value>Stop movenents and program</value>
  </data>
  <data name="___Stop_program__" xml:space="preserve">
    <value>Stop program</value>
  </data>
  <data name="___Restore__" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="___Invalid_reference____" xml:space="preserve">
    <value>Invalid reference: </value>
  </data>
  <data name="___Waiting_to_program_running____" xml:space="preserve">
    <value>Waiting to program running! </value>
  </data>
  <data name="___Start_at_Main_was_aborted__while_not_yet_completed___" xml:space="preserve">
    <value>Start at Main was aborted, while not yet completed!</value>
  </data>
  <data name="___Start_at_Main_was_completed_successfully___" xml:space="preserve">
    <value>Start at Main was completed successfully.</value>
  </data>
  <data name="___Start_at_Main_finished_with_error___" xml:space="preserve">
    <value>Start at Main finished with error.</value>
  </data>
  <data name="___Start_at_Main_started___" xml:space="preserve">
    <value>Start at Main started.</value>
  </data>
  <data name="___Robot_has_error_Reset__" xml:space="preserve">
    <value>Robot has error Reset</value>
  </data>
  <data name="___Robot_Emergency_Stop_Reset__" xml:space="preserve">
    <value>Robot Emergency Stop Reset</value>
  </data>
  <data name="____Waiting_for_signal____" xml:space="preserve">
    <value> Waiting for signal: </value>
  </data>
  <data name="___Robot_Power_on__" xml:space="preserve">
    <value>Robot Power on</value>
  </data>
  <data name="___Start_motors_and_program_was_aborted___" xml:space="preserve">
    <value>Start motors and program was aborted.</value>
  </data>
  <data name="___Start_motors_and_program_finished_successfully___" xml:space="preserve">
    <value>Start motors and program finished successfully.</value>
  </data>
  <data name="___Start_motors_and_program_finished_with_error___" xml:space="preserve">
    <value>Start motors and program finished with error.</value>
  </data>
  <data name="___Start_motors_and_program_started___" xml:space="preserve">
    <value>Start motors and program started.</value>
  </data>
  <data name="___Invalid_reference_StartMotorAndProgramTask__" xml:space="preserve">
    <value>Invalid reference StartMotorAndProgramTask</value>
  </data>
  <data name="___Moving_to_position_ID__" xml:space="preserve">
    <value>Moving to position ID</value>
  </data>
  <data name="___Start_motors__program_and_movements_was_aborted__while_not_yet_completed___" xml:space="preserve">
    <value>Start motors, program and movements was aborted, while not yet completed!</value>
  </data>
  <data name="___Start_motors__program_and_movements_finished_successfully___" xml:space="preserve">
    <value>Start motors, program and movements finished successfully.</value>
  </data>
  <data name="___Start_motors__program_and_movements_finished_with_error___" xml:space="preserve">
    <value>Start motors, program and movements finished with error.</value>
  </data>
  <data name="___Start_motors__program_and_movements_stared___" xml:space="preserve">
    <value>Start motors, program and movements stared.</value>
  </data>
  <data name="___Start_motors__was_aborted___" xml:space="preserve">
    <value>Start motors  was aborted.</value>
  </data>
  <data name="___Start_motors__finished_successfully___" xml:space="preserve">
    <value>Start motors  finished successfully.</value>
  </data>
  <data name="___Start_motors_finished_with_error___" xml:space="preserve">
    <value>Start motors finished with error.</value>
  </data>
  <data name="___Start_motors_started___" xml:space="preserve">
    <value>Start motors started.</value>
  </data>
  <data name="___Waiting_for_motors_are_On____" xml:space="preserve">
    <value>Waiting for motors are On! </value>
  </data>
  <data name="___Waiting_for_system_is_without_errors____" xml:space="preserve">
    <value>Waiting for system is without errors! </value>
  </data>
  <data name="___Start_movements_was_aborted__while_not_yet_completed___" xml:space="preserve">
    <value>Start movements was aborted, while not yet completed!</value>
  </data>
  <data name="___Start_movements_finished_successfully___" xml:space="preserve">
    <value>Start movements finished successfully.</value>
  </data>
  <data name="___Start_movements_finished_with_error___" xml:space="preserve">
    <value>Start movements finished with error.</value>
  </data>
  <data name="___Start_movements_stared___" xml:space="preserve">
    <value>Start movements stared.</value>
  </data>
  <data name="___Stop_program_was_aborted__while_not_yet_completed___" xml:space="preserve">
    <value>Stop program was aborted, while not yet completed!</value>
  </data>
  <data name="___Stop_program_was_completed_successfully___" xml:space="preserve">
    <value>Stop program was completed successfully.</value>
  </data>
  <data name="___Stopping_program_with_error___" xml:space="preserve">
    <value>Stopping program with error.</value>
  </data>
  <data name="___Stopping_program_started___" xml:space="preserve">
    <value>Stopping program started.</value>
  </data>
  <data name="____Waiting_to_program_is_stopped____" xml:space="preserve">
    <value> Waiting to program is stopped. </value>
  </data>
  <data name="___Stop_movements_and_program_was_aborted__while_not_yet_completed___" xml:space="preserve">
    <value>Stop movements and program was aborted, while not yet completed!</value>
  </data>
  <data name="___Stop_movements_and_program__was_completed_successfully___" xml:space="preserve">
    <value>Stop movements and program  was completed successfully.</value>
  </data>
  <data name="___Stop_movements_and_program_finished_with_error___" xml:space="preserve">
    <value>Stop movements and program finished with error.</value>
  </data>
  <data name="___Stop_movements_and_program_started___" xml:space="preserve">
    <value>Stop movements and program started.</value>
  </data>
  <data name="___Stopping_movements_was_aborted__while_not_yet_completed___" xml:space="preserve">
    <value>Stopping movements was aborted, while not yet completed!</value>
  </data>
  <data name="___Stopping_movements_was_completed_successfully___" xml:space="preserve">
    <value>Stopping movements was completed successfully.</value>
  </data>
  <data name="___Stopping_movement_finished_with_error___" xml:space="preserve">
    <value>Stopping movement finished with error.</value>
  </data>
  <data name="___Stopping_movements_started___" xml:space="preserve">
    <value>Stopping movements started.</value>
  </data>
  <data name="___Bit_registers__" xml:space="preserve">
    <value>Bit registers</value>
  </data>
  <data name="___Float_registers__" xml:space="preserve">
    <value>Float registers</value>
  </data>
  <data name="___Controller_major_version__" xml:space="preserve">
    <value>Controller major version</value>
  </data>
  <data name="___Controller_minor_version__" xml:space="preserve">
    <value>Controller minor version</value>
  </data>
  <data name="___Reserved__" xml:space="preserve">
    <value>Reserved</value>
  </data>
  <data name="___Robot_mode__" xml:space="preserve">
    <value>Robot mode</value>
  </data>
  <data name="___Real_time_machine_seconds__" xml:space="preserve">
    <value>Real time machine seconds</value>
  </data>
  <data name="___Real_time_machine_milliseconds__" xml:space="preserve">
    <value>Real time machine milliseconds</value>
  </data>
  <data name="___Real_time_machine_minutes__" xml:space="preserve">
    <value>Real time machine minutes</value>
  </data>
  <data name="___Real_time_machine_hours__" xml:space="preserve">
    <value>Real time machine hours</value>
  </data>
  <data name="___Real_time_machine_days__" xml:space="preserve">
    <value>Real time machine days</value>
  </data>
  <data name="___Robot_current__A___" xml:space="preserve">
    <value>Robot current [A]</value>
  </data>
  <data name="___PW__Is_power_on__" xml:space="preserve">
    <value>PW: Is power on</value>
  </data>
  <data name="___PR__Is_program_running__" xml:space="preserve">
    <value>PR: Is program running</value>
  </data>
  <data name="___TB__Is_teach_button_pressed__" xml:space="preserve">
    <value>TB: Is teach button pressed</value>
  </data>
  <data name="___PB__Is_power_button_pressed__" xml:space="preserve">
    <value>PB: Is power button pressed</value>
  </data>
  <data name="___Speed_slider_fraction__" xml:space="preserve">
    <value>Speed slider fraction</value>
  </data>
  <data name="___Int_registers__" xml:space="preserve">
    <value>Int registers</value>
  </data>
  <data name="___Standard_digital_inputs__" xml:space="preserve">
    <value>Standard digital inputs</value>
  </data>
  <data name="___Configurable_digital_inputs__" xml:space="preserve">
    <value>Configurable digital inputs</value>
  </data>
  <data name="___Standard_digital_outputs__" xml:space="preserve">
    <value>Standard digital outputs</value>
  </data>
  <data name="___Configurable_digital_outputs__" xml:space="preserve">
    <value>Configurable digital outputs</value>
  </data>
  <data name="___Analog_I_O_types__" xml:space="preserve">
    <value>Analog I/O types</value>
  </data>
  <data name="___Standard_analog_input__A_or_V___" xml:space="preserve">
    <value>Standard analog input [A or V]</value>
  </data>
  <data name="___Standard_analog_output__A_or_V___" xml:space="preserve">
    <value>Standard analog output [A or V]</value>
  </data>
  <data name="___I_O_current__A___" xml:space="preserve">
    <value>I/O current [A]</value>
  </data>
  <data name="___Euromap67_input_bits__" xml:space="preserve">
    <value>Euromap67 input bits</value>
  </data>
  <data name="___Euromap67_output_bits__" xml:space="preserve">
    <value>Euromap67 output bits</value>
  </data>
  <data name="___Euromap67_24V_voltage__" xml:space="preserve">
    <value>Euromap67 24V voltage</value>
  </data>
  <data name="___Euromap67_24V_current__" xml:space="preserve">
    <value>Euromap67 24V current</value>
  </data>
  <data name="___Joint_position__rad___" xml:space="preserve">
    <value>Joint position [rad]</value>
  </data>
  <data name="___Joint_velocity__rad_s___" xml:space="preserve">
    <value>Joint velocity [rad/s]</value>
  </data>
  <data name="___Joint_current__A___" xml:space="preserve">
    <value>Joint current [A]</value>
  </data>
  <data name="___Joint_temperature___C___" xml:space="preserve">
    <value>Joint temperature [°C]</value>
  </data>
  <data name="___Joint_mode__" xml:space="preserve">
    <value>Joint mode</value>
  </data>
  <data name="___Safety_mode__" xml:space="preserve">
    <value>Safety mode</value>
  </data>
  <data name="___NO__Is_normal_mode__" xml:space="preserve">
    <value>NO: Is normal mode</value>
  </data>
  <data name="___RD__Is_reduced_mode__" xml:space="preserve">
    <value>RD: Is reduced mode</value>
  </data>
  <data name="___PS__Is_protective_stopped__" xml:space="preserve">
    <value>PS: Is protective stopped</value>
  </data>
  <data name="___RC__Is_recovery_mode__" xml:space="preserve">
    <value>RC: Is recovery mode</value>
  </data>
  <data name="___SS__Is_safeguard_stopped__" xml:space="preserve">
    <value>SS: Is safeguard stopped</value>
  </data>
  <data name="___SES__Is_system_emergency_stopped__" xml:space="preserve">
    <value>SES: Is system emergency stopped</value>
  </data>
  <data name="___RES__Is_robot_emergency_stopped__" xml:space="preserve">
    <value>RES: Is robot emergency stopped</value>
  </data>
  <data name="___ES__Is_emergency_stopped__" xml:space="preserve">
    <value>ES: Is emergency stopped</value>
  </data>
  <data name="___VL__Is_violation__" xml:space="preserve">
    <value>VL: Is violation</value>
  </data>
  <data name="___FT__Is_fault__" xml:space="preserve">
    <value>FT: Is fault</value>
  </data>
  <data name="___ST__Is_stopped_due_TO_safety__" xml:space="preserve">
    <value>ST: Is stopped due TO safety</value>
  </data>
  <data name="___Actual_TCP_Position__" xml:space="preserve">
    <value>Actual TCP Position</value>
  </data>
  <data name="___Actual_TCP_Velocity__" xml:space="preserve">
    <value>Actual TCP Velocity</value>
  </data>
  <data name="___Actual_TCP_Force__" xml:space="preserve">
    <value>Actual TCP Force</value>
  </data>
  <data name="___Actual_TCP_Torque__" xml:space="preserve">
    <value>Actual TCP Torque</value>
  </data>
  <data name="___TCP_force_scalar__N___" xml:space="preserve">
    <value>TCP force scalar [N]</value>
  </data>
  <data name="___Tool_mode__" xml:space="preserve">
    <value>Tool mode</value>
  </data>
  <data name="___TDI__Tool_Digital_Inputs__" xml:space="preserve">
    <value>TDI: Tool Digital Inputs</value>
  </data>
  <data name="___TDO__Tool_Digital_Outputs__" xml:space="preserve">
    <value>TDO: Tool Digital Outputs</value>
  </data>
  <data name="___TAIT__Tool_Analog_Input_Types__" xml:space="preserve">
    <value>TAIT: Tool Analog Input Types</value>
  </data>
  <data name="___Tool_analog_input__A_OR_V___" xml:space="preserve">
    <value>Tool analog input [A OR V]</value>
  </data>
  <data name="___Tool_output_voltage__V___" xml:space="preserve">
    <value>Tool output voltage [V]</value>
  </data>
  <data name="___Tool_current__A___" xml:space="preserve">
    <value>Tool current [A]</value>
  </data>
  <data name="___Standard_digital_output_mask__" xml:space="preserve">
    <value>Standard digital output mask</value>
  </data>
  <data name="___Configurable_digital_output_mask__" xml:space="preserve">
    <value>Configurable digital output mask</value>
  </data>
  <data name="___AOM__Analog_output_mask__" xml:space="preserve">
    <value>AOM: Analog output mask</value>
  </data>
  <data name="___AOT__Analog_output_types__" xml:space="preserve">
    <value>AOT: Analog output types</value>
  </data>
  <data name="___TDOM__Tool_digital_output_mask__" xml:space="preserve">
    <value>TDOM: Tool digital output mask</value>
  </data>
  <data name="___TDO__Tool_digital_output__" xml:space="preserve">
    <value>TDO: Tool digital output</value>
  </data>
  <data name="___Standard_analog_output__" xml:space="preserve">
    <value>Standard analog output</value>
  </data>
  <data name="___SSM__Speed_slider_fraction_mask__" xml:space="preserve">
    <value>SSM: Speed slider fraction mask</value>
  </data>
  <data name="___Robot__" xml:space="preserve">
    <value>Robot</value>
  </data>
  <data name="___State__" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="___IO_state__" xml:space="preserve">
    <value>IO state</value>
  </data>
  <data name="___Tool_state__" xml:space="preserve">
    <value>Tool state</value>
  </data>
  <data name="___Joints__" xml:space="preserve">
    <value>Joints</value>
  </data>
  <data name="___TCP__" xml:space="preserve">
    <value>TCP</value>
  </data>
  <data name="___Bits__" xml:space="preserve">
    <value>Bits</value>
  </data>
  <data name="___Ints__" xml:space="preserve">
    <value>Ints</value>
  </data>
  <data name="___Floats__" xml:space="preserve">
    <value>Floats</value>
  </data>
  <data name="___Speed__" xml:space="preserve">
    <value>Speed</value>
  </data>
  <data name="___IO__" xml:space="preserve">
    <value>IO</value>
  </data>
  <data name="___Reg_1__" xml:space="preserve">
    <value>Reg 1</value>
  </data>
  <data name="___Reg_2__" xml:space="preserve">
    <value>Reg 2</value>
  </data>
  <data name="___Pause_program__" xml:space="preserve">
    <value>Pause program</value>
  </data>
  <data name="___Set_motor_on__" xml:space="preserve">
    <value>Set motor on</value>
  </data>
  <data name="___Run_action__" xml:space="preserve">
    <value>Run action</value>
  </data>
  <data name="___Master_mode__" xml:space="preserve">
    <value>Master mode</value>
  </data>
  <data name="___Tool_1_retract__" xml:space="preserve">
    <value>Tool 1 retract</value>
  </data>
  <data name="___Tool_1_extend__" xml:space="preserve">
    <value>Tool 1 extend</value>
  </data>
  <data name="___Tool_2_retract__" xml:space="preserve">
    <value>Tool 2 retract</value>
  </data>
  <data name="___Tool_2_extend__" xml:space="preserve">
    <value>Tool 2 extend</value>
  </data>
  <data name="___Tool_3_retract__" xml:space="preserve">
    <value>Tool 3 retract</value>
  </data>
  <data name="___Tool_3_extend__" xml:space="preserve">
    <value>Tool 3 extend</value>
  </data>
  <data name="___Tool_4_retract__" xml:space="preserve">
    <value>Tool 4 retract</value>
  </data>
  <data name="___Tool_4_extend__" xml:space="preserve">
    <value>Tool 4 extend</value>
  </data>
  <data name="___Zones__" xml:space="preserve">
    <value>Zones</value>
  </data>
  <data name="___In_position__" xml:space="preserve">
    <value>In position</value>
  </data>
  <data name="___Action_number__" xml:space="preserve">
    <value>Action number</value>
  </data>
  <data name="___Global_robot_speed__" xml:space="preserve">
    <value>Global robot speed</value>
  </data>
  <data name="___Tool_number__" xml:space="preserve">
    <value>Tool number</value>
  </data>
  <data name="___Workobject_number__" xml:space="preserve">
    <value>Workobject number</value>
  </data>
  <data name="___Point_number__" xml:space="preserve">
    <value>Point number</value>
  </data>
  <data name="___User_specific_speed_1__" xml:space="preserve">
    <value>User specific speed 1</value>
  </data>
  <data name="___User_specific_speed_2__" xml:space="preserve">
    <value>User specific speed 2</value>
  </data>
  <data name="___Coordinates__" xml:space="preserve">
    <value>Coordinates</value>
  </data>
  <data name="___In_area_1__" xml:space="preserve">
    <value>In area 1</value>
  </data>
  <data name="___In_area_2__" xml:space="preserve">
    <value>In area 2</value>
  </data>
  <data name="___In_area_3__" xml:space="preserve">
    <value>In area 3</value>
  </data>
  <data name="___In_area_4__" xml:space="preserve">
    <value>In area 4</value>
  </data>
  <data name="___In_position_1__" xml:space="preserve">
    <value>In position 1</value>
  </data>
  <data name="___In_position_2__" xml:space="preserve">
    <value>In position 2</value>
  </data>
  <data name="___In_position_3__" xml:space="preserve">
    <value>In position 3</value>
  </data>
  <data name="___In_position_4__" xml:space="preserve">
    <value>In position 4</value>
  </data>
  <data name="___Global_speed__" xml:space="preserve">
    <value>Global speed</value>
  </data>
  <data name="___PointNumber__" xml:space="preserve">
    <value>PointNumber</value>
  </data>
  <data name="___UR_Specific__" xml:space="preserve">
    <value>UR Specific</value>
  </data>
  <data name="___IN__" xml:space="preserve">
    <value>IN</value>
  </data>
  <data name="___OUT__" xml:space="preserve">
    <value>OUT</value>
  </data>
  <data name="___RobotIO__" xml:space="preserve">
    <value>RobotIO</value>
  </data>
  <data name="___Reg2__" xml:space="preserve">
    <value>Reg2</value>
  </data>
</root>